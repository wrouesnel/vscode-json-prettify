name: Create Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Print Working Directory
      run: pwd

    - name: Install dependencies
      run: npm ci

    - name: Run Unit Tests
      run: |
        sudo apt-get update
        sudo apt-get install -y xvfb
        xvfb-run -a npm test

    - name: Get Version
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

    - name: Package Extension
      run: npx vsce package --out pretty-json-preview-${{ steps.get_version.outputs.VERSION }}.vsix

    - name: Debug Directory Contents
      run: ls -l ${{ github.workspace }}

    - name: Debug Find VSIX
      run: find ${{ github.workspace }} -name '*.vsix' -type f

    - name: Get Package Name
      id: package-name
      run: echo "name=$(node -p "require('./package.json').name")" >> $GITHUB_OUTPUT

    - name: Publish to Visual Studio Marketplace
      uses: cezarypiatek/vscode-extension-publisher@v1
      with:
        extensionFile: ${{ github.workspace }}/pretty-json-preview-${{ steps.get_version.outputs.VERSION }}.vsix
        pat: ${{ secrets.VSCE_TOKEN }}

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ steps.get_version.outputs.VERSION }}
        body_path: CHANGELOG.md
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ github.workspace }}/pretty-json-preview-${{ steps.get_version.outputs.VERSION }}.vsix
        asset_name: ${{ steps.package-name.outputs.name }}-${{ steps.get_version.outputs.VERSION }}.vsix
        asset_content_type: application/octet-stream
